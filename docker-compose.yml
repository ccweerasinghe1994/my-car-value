version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: my-car-value-postgres
    environment:
      POSTGRES_DB: my_car_value
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d my_car_value']
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application (optional - for full containerization)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-car-value-app
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=my_car_value
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
    profiles:
      - full-stack

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
